name: Nightly Builds
on:
  schedule:
    - cron:  '0, 0, *, *, *'

   # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  playstore_name: Valolink

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checking out branch
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@main
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Making gradlew executable
        run: chmod +x ./gradlew

      # This will decode the google-services.json from base 64 text representation that we have stored in secrets
      # and generates and keystore file and gets stored in main module path
      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES_BASE64: ${{ secrets.GOOGLE_SERVICES_BASE_64 }}

        run: |
          echo $GOOGLE_SERVICES_BASE64 | base64 -di > $main_project_module/google-services.json
        
      # Run Tests Build
      - name: Run gradle test
        run: ./gradlew test

      # This will decode the keystore from base 64 text representation that we have stored in secrets
      # and generates and keystore file and gets stored in /android-app path
      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE_64 }}

        run: |
          echo $KEYSTORE_BASE64 | base64 -di > keystore.jks

      - name: Build Release apk
        env:
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease --stacktrace

      - name: Build Release bundle
        env:
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew bundleRelease --stacktrace

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Get release file aab path
        id: releaseAab
        run: echo "aabfile=$(find app/build/outputs/bundle/release/*.aab)" >> $GITHUB_OUTPUT

      - name: Get release file apk path
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Upload Release Build APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
           name: Valolink Nightly ${{ steps.date.outputs.date }} APK
           path: ${{ steps.releaseApk.outputs.apkfile }}

      - name: Upload Release Build AAB to Artifacts
        uses: actions/upload-artifact@v4
        with:
           name: Valolink Nightly ${{ steps.date.outputs.date }} AAB
           path: ${{ steps.releaseAab.outputs.aabfile }}
